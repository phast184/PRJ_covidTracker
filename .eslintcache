[{"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/index.js":"1","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/App.js":"2","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/context/context.js":"3","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/LineGraph.js":"4","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/InfoBox.js":"5","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Map/Map.js":"6","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Table.js":"7","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/context/actions.js":"8","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/reducer/reducer.js":"9","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/utils/helpers.js":"10","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Map/ChangeView.js":"11"},{"size":318,"mtime":1616885815608,"results":"12","hashOfConfig":"13"},{"size":6261,"mtime":1616954008530,"results":"14","hashOfConfig":"13"},{"size":3547,"mtime":1616879068225,"results":"15","hashOfConfig":"13"},{"size":1930,"mtime":1616906512879,"results":"16","hashOfConfig":"13"},{"size":972,"mtime":1616906512873,"results":"17","hashOfConfig":"13"},{"size":1506,"mtime":1616906512879,"results":"18","hashOfConfig":"13"},{"size":816,"mtime":1616906512879,"results":"19","hashOfConfig":"13"},{"size":469,"mtime":1616879068219,"results":"20","hashOfConfig":"13"},{"size":1845,"mtime":1616879068239,"results":"21","hashOfConfig":"13"},{"size":2511,"mtime":1616906512879,"results":"22","hashOfConfig":"13"},{"size":189,"mtime":1616879068190,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1s4c9nb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/index.js",[],["50","51"],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/App.js",["52"],"import React, { useState } from \"react\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\n\nimport { useGlobalContext } from \"./context/context\";\nimport \"./App.css\";\nimport InfoBox from \"./components/InfoBox\";\nimport Table from \"./components/Table\";\nimport Map from \"./components/Map/Map\";\nimport LineGraph from \"./components/LineGraph\";\nimport numeral from \"numeral\";\nimport \"leaflet/dist/leaflet.css\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nimport {FaLightbulb, FaRegLightbulb} from \"react-icons/fa\";\n\nconst GlobalStyle = createGlobalStyle`\n.app, .map{\n  background-color: ${(props) =>\n    props.theme.mode === \"dark\" ? \"#111\" : \"#EEE\"};\n    color: ${(props) => (props.theme.mode === \"dark\" ? \"#EEE\" : \"#111\")};\n}\n\n.infoBox, .infoBox__total, .app__right, #title_header,\n .countryDropDown, .countryMenuItem, .MuiMenu-paper,\n  #select-dropDown, .table tr:nth-of-type(even), .graph-header{\n  background-color: ${(props) =>\n    props.theme.mode === \"dark\" ? \"#555\" : \"#EEE\"};\n    color: ${(props) => (props.theme.mode === \"dark\" ? \"white\" : \"black\")};\n}\n\n.table tr:nth-of-type(odd){\n  background-color: ${(props) =>\n    props.theme.mode === \"dark\" ? \"#333\" : \"#EEE\"};\n    color: ${(props) => (props.theme.mode === \"dark\" ? \"white\" : \"black\")};\n}\n\n.fa-lightbulb, .fa-lightbulb-text{\n  color: ${(props) => (props.theme.mode === \"dark\" ? \"yellow\" : \"black\")};\n}\n\n.fa-lightbulb{\n  cursor: pointer;\n}\n`;\n\nfunction App() {\n  // const [country, setCountry] = useState(\"worldwide\");\n  const {\n    country,\n    countries,\n    countryInput,\n    setCountryInput,\n    setCaseType,\n    caseType,\n    typeInputData,\n    typeInput,\n    setTypeInput,\n  } = useGlobalContext();\n\n  const [theme, setTheme] = useState({mode: \"dark\"})\n\n  console.log(typeInput);\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <GlobalStyle />\n        <div className=\"app\">\n\n        <Card className=\"app__right\">\n            <CardContent>\n              <div className=\"app__information\">\n                <div className=\"app__right__header\">\n                  <div id=\"title_header\">\n                    <h4>Live Stats By Country</h4>\n                    <p className=\"title note\">\n                      *Select to see data on <br /> different case type\n                    </p>\n                  </div>\n                  <FormControl className=\"app_dropDown\">\n                    <Select\n                      variant=\"outlined\"\n                      value={typeInput}\n                      onChange={(e) => setTypeInput(e)} \n                      id=\"select-dropDown\"\n                    >\n                      {typeInputData.map((typeInput, index) => {\n                        return (\n                          <MenuItem value={typeInput.type} key={index}>\n                            {typeInput.name}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                </div>\n                <Table theme={theme.mode}></Table>\n                <h4 className=\"graph-header\">{countryInput} line graph</h4>\n                <LineGraph theme={theme.mode} />\n              </div>\n            </CardContent>\n          </Card>\n\n          <div className=\"app__left\">\n            <div className=\"app__header\">\n              <h1>COVID-19 Safety Map&nbsp;<FaLightbulb className=\"fa-lightbulb\" onClick={e => setTheme(theme.mode === 'dark' ? {mode: 'light'} : {mode: 'dark'})}></FaLightbulb>\n              <span className=\"fa-lightbulb-text\" style={{fontSize: \"0.4em\", textDecoration: \"none\"}}>&nbsp;{theme.mode === 'dark' ? \"Turn on the lights\" : \"Turn off the lights\"}</span></h1> \n              \n              <FormControl className=\"app_dropDown\">\n                <Select\n                  variant=\"outlined\"\n                  value={countryInput}\n                  onChange={(e) => setCountryInput(e)}\n                  className=\"countryDropDown\"\n                >\n                  <MenuItem\n                    value=\"worldwide\"\n                    selected=\"selected\"\n                  >\n                    Worldwide\n                  </MenuItem>\n                  {countries.map((country, index) => {\n                    return (\n                      <MenuItem\n                        value={country.countryInfo.iso2}\n                        key={index}\n                        className=\"countryMenuItem\"\n                      >\n                        {country.country}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </div>\n            <Map />\n            <p className=\"note\">\n              *Click on one of the three tags below to see the data of different\n              case type.\n            </p>\n            <p className=\"note\">\n              *Click on the drop down menu to see data of different countries.\n            </p>\n            <div className=\"app__stat\">\n              <InfoBox\n                title=\"Today's Coronavirus Cases\"\n                onClick={(e) => setCaseType(\"cases\")}\n                active={caseType === \"cases\"}\n                cases={numeral(country.todayCases).format(\"0.0a\")}\n                total={numeral(country.cases).format(\"0.0a\")}\n                isRed\n                theme={theme.mode}\n              />\n              <InfoBox\n                title=\"Today's Recovered People\"\n                cases={numeral(country.todayRecovered).format(\"0.0a\")}\n                onClick={(e) => setCaseType(\"recovered\")}\n                active={caseType === \"recovered\"}\n                total={numeral(country.recovered).format(\"0.0a\")}\n                theme={theme.mode}\n              />\n              <InfoBox\n                title=\"Today's Death\"\n                cases={numeral(country.todayDeaths).format(\"0.0a\")}\n                onClick={(e) => setCaseType(\"deaths\")}\n                active={caseType === \"deaths\"}\n                total={numeral(country.deaths).format(\"0.0a\")}\n                isRed\n                theme={theme.mode}\n              />\n            </div>\n          </div>\n\n          \n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/context/context.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/LineGraph.js",["53"],"import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { useGlobalContext } from \"../context/context\";\nimport { casesTypeColors } from \"../utils/helpers\";\nimport \"./LineGraph.css\";\n\nfunction LineGraph( { theme }) {\n  const { historicalCountry, caseType, countryInput } = useGlobalContext();\n  const options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n          ticks: {\n            fontColor: theme === 'dark' ? \"white\" : \"black\"\n          }\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            // Include a dollar sign in the ticks\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n            fontColor: theme === 'dark' ? \"white\" : \"black\"\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <div className=\"graph\">\n      \n      {historicalCountry?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: `${casesTypeColors[caseType].half_op}`,\n                borderColor: theme === 'dark' ? 'white' : 'black',\n                data: historicalCountry,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n\n      {historicalCountry.message && <h3>No data available for this country</h3>}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/InfoBox.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Map/Map.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Table.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/context/actions.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/reducer/reducer.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/utils/helpers.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Map/ChangeView.js",[],["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":19,"column":22,"nodeType":"62","messageId":"63","endLine":19,"endColumn":36},{"ruleId":"60","severity":1,"message":"64","line":9,"column":40,"nodeType":"62","messageId":"63","endLine":9,"endColumn":52},{"ruleId":"56","replacedBy":"65"},{"ruleId":"58","replacedBy":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'FaRegLightbulb' is defined but never used.","Identifier","unusedVar","'countryInput' is assigned a value but never used.",["67"],["68"],"no-global-assign","no-unsafe-negation"]