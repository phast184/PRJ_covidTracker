[{"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/index.js":"1","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/App.js":"2","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/context/canadaContext.js":"3","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/context/globalContext.js":"4","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/utils/helpers.js":"5","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/actions/globalActions.js":"6","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/actions/canadaActions.js":"7","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/reducer/globalReducer.js":"8","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/reducer/canadaReducer.js":"9","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/pages/GlobalCovidPage.js":"10","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/pages/CanadaCovidPage.js":"11","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Table.js":"12","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/LineGraph.js":"13","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/InfoBox.js":"14","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/NavBar.js":"15","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Map/Map.js":"16","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Map/ChangeView.js":"17"},{"size":470,"mtime":1617036137762,"results":"18","hashOfConfig":"19"},{"size":484,"mtime":1617036440616,"results":"20","hashOfConfig":"19"},{"size":2080,"mtime":1617036137762,"results":"21","hashOfConfig":"19"},{"size":3574,"mtime":1617036137815,"results":"22","hashOfConfig":"19"},{"size":2635,"mtime":1617036137815,"results":"23","hashOfConfig":"19"},{"size":469,"mtime":1617036137862,"results":"24","hashOfConfig":"19"},{"size":332,"mtime":1617036137730,"results":"25","hashOfConfig":"19"},{"size":1851,"mtime":1617036137815,"results":"26","hashOfConfig":"19"},{"size":804,"mtime":1617036137784,"results":"27","hashOfConfig":"19"},{"size":5648,"mtime":1617051442172,"results":"28","hashOfConfig":"19"},{"size":5773,"mtime":1617051460751,"results":"29","hashOfConfig":"19"},{"size":1417,"mtime":1617037866078,"results":"30","hashOfConfig":"19"},{"size":1929,"mtime":1617038168171,"results":"31","hashOfConfig":"19"},{"size":972,"mtime":1616906512873,"results":"32","hashOfConfig":"19"},{"size":603,"mtime":1617036137746,"results":"33","hashOfConfig":"19"},{"size":1487,"mtime":1617036137846,"results":"34","hashOfConfig":"19"},{"size":189,"mtime":1616879068190,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1s4c9nb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/index.js",[],["75","76"],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/App.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/context/canadaContext.js",["77","78","79","80"],"import React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport { fetchThings, buildChartData } from \"../utils/helpers\";\nimport reducer from \"../reducer/canadaReducer\";\nimport {\n  LOAD_ALL_PROVINCES_DATA,\n  LOAD_CANADA_DATA,\n  SET_CASE_TYPE,\n  SET_PROVINCE_INPUT,\n  LOAD_HISTORICAL_CANADA,\n  SET_TYPE_INPUT,\n} from \"../actions/canadaActions\";\nimport {} from \"../actions/canadaActions\";\n\nconst initialState = {\n  provinces: [],\n  canada: [],\n  caseType: \"cases\",\n  provinceInput: \"Canada\",\n  typeInput: \"confirmed\",\n  typeInputData: [\n    { type: \"confirmed\", name: \"Confirmed Cases\" },\n    { type: \"deaths\", name: \"Deaths\" },\n    { type: \"recovered\", name: \"Recovered\" },\n  ],\n};\n\nconst CanadaContext = React.createContext();\n\nexport const CanadaContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //**fetch data for Canada */\n\n  const fetchCanada = async () => {\n    let url = \"https://disease.sh/v3/covid-19/countries/CA?strict=true\";\n    const data = await fetchThings(url);\n    dispatch({ type: LOAD_CANADA_DATA, payload: data });\n  };\n  //**fetch data of all provinces in Canada */\n  const fetchProvinces = async () => {\n    let url = \"https://disease.sh/v3/covid-19/jhucsse\";\n    let data = await fetchThings(url);\n    data = data.filter((a) => a.country === \"Canada\");\n    dispatch({ type: LOAD_ALL_PROVINCES_DATA, payload: data });\n  };\n\n  //**set type input */\n\n  const setTypeInput = (e) => {\n    dispatch({ type: SET_TYPE_INPUT, payload: e.target.value });\n  };\n\n  /**Set province input for dropdown menu */\n\n  const setProvinceInput = (e) => {\n    dispatch({type: SET_PROVINCE_INPUT, payload: e.target.value})\n  }\n\n\n  console.log(state.provinces);\n  useEffect(() => {\n    fetchCanada();\n    fetchProvinces();\n  }, []);\n  return (\n    //to pass the state from the context Provider\n    <CanadaContext.Provider value={{ ...state, setTypeInput, setProvinceInput }}>\n      {children}\n    </CanadaContext.Provider>\n  );\n};\n\nexport const useCanadaContext = () => {\n  return useContext(CanadaContext);\n};\n","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/context/globalContext.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/utils/helpers.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/actions/globalActions.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/actions/canadaActions.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/reducer/globalReducer.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/reducer/canadaReducer.js",["81","82"],"import {\n  LOAD_ALL_PROVINCES_DATA,\n  LOAD_CANADA_DATA,\n  SET_CASE_TYPE,\n  SET_PROVINCE_INPUT,\n  LOAD_HISTORICAL_CANADA,\n  SET_TYPE_INPUT\n} from \"../actions/canadaActions\";\n\nconst reducer = (state, action) => {\n    if (action.type === LOAD_CANADA_DATA){\n        return{\n            ...state,\n            canada: action.payload\n        }\n    }\n\n    if (action.type === LOAD_ALL_PROVINCES_DATA){\n        return{\n            ...state,\n            provinces: action.payload\n        }\n    }\n\n    if (action.type === SET_TYPE_INPUT){\n        return{\n          ...state,\n          typeInput: action.payload\n        }\n      }\n    \n    if (action.type === SET_PROVINCE_INPUT){\n      return{\n        ...state,\n        provinceInput: action.payload\n      }\n    }\n\n    return state;\n    \n};\n\nexport default reducer;\n","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/pages/GlobalCovidPage.js",["83"],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/pages/CanadaCovidPage.js",["84","85","86","87"],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Table.js",["88","89"],"import React from 'react'\nimport './Table.css'\nimport numeral from 'numeral'\n\nimport { useGlobalContext } from '../context/globalContext'\nimport { useCanadaContext } from '../context/canadaContext'\nimport { sortDataCountries, sortDataProvinces } from '../utils/helpers'\nfunction Table(props) {\n    let tempData = [...props.data];\n    tempData.length > 100 ? tempData = sortDataCountries(tempData, props.typeInput) : tempData = sortDataProvinces(tempData, props.typeInput);\n    return (\n        <div className='table'>\n            {\n                tempData.length > 100 ? tempData.map(country => {\n                    return (\n                        <tr>\n                            <td>{country.country}</td>\n                            <td>\n                                <strong>{numeral(country[props.typeInput]).format(\"0,0\")}</strong>\n                            </td>\n                        </tr>\n                    )\n                }) :\n                    tempData.map(p => {\n                        return (\n                            <tr>\n                                <td>{p.province}</td>\n                                <td>\n                                    <strong>{numeral(p.stats[props.typeInput]).format(\"0,0\")}</strong>\n                                </td>\n                            </tr>\n                        )\n                    })}\n        </div>\n    )\n}\n\nexport default Table\n","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/LineGraph.js",["90"],"import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { useGlobalContext } from \"../context/globalContext\";\nimport { casesTypeColors } from \"../utils/helpers\";\nimport \"./LineGraph.css\";\n\nfunction LineGraph( { theme }) {\n  const { historicalCountry, caseType, countryInput } = useGlobalContext();\n  const options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n          ticks: {\n            fontColor: theme === 'dark' ? \"white\" : \"black\"\n          }\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            // Include a dollar sign in the ticks\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n            fontColor: theme === 'dark' ? \"white\" : \"black\"\n          },\n        },],\n    },\n  };\n  return (\n    <div className=\"graph\">\n      \n      {historicalCountry?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: `${casesTypeColors[caseType].half_op}`,\n                borderColor: theme === 'dark' ? 'white' : 'black',\n                data: historicalCountry,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n\n      {historicalCountry.message && <h3>No data available for this country</h3>}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/InfoBox.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/NavBar.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Map/Map.js",[],"/mnt/c/Users/super/OneDrive - Seneca/School/SEM 6/PRJ666/CovidSafetyMap/covid_tracker/src/components/Map/ChangeView.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"99","line":2,"column":23,"nodeType":"97","messageId":"98","endLine":2,"endColumn":37},{"ruleId":"95","severity":1,"message":"100","line":7,"column":3,"nodeType":"97","messageId":"98","endLine":7,"endColumn":16},{"ruleId":"95","severity":1,"message":"101","line":9,"column":3,"nodeType":"97","messageId":"98","endLine":9,"endColumn":25},{"ruleId":"95","severity":1,"message":"100","line":4,"column":3,"nodeType":"97","messageId":"98","endLine":4,"endColumn":16},{"ruleId":"95","severity":1,"message":"101","line":6,"column":3,"nodeType":"97","messageId":"98","endLine":6,"endColumn":25},{"ruleId":"95","severity":1,"message":"102","line":19,"column":22,"nodeType":"97","messageId":"98","endLine":19,"endColumn":36},{"ruleId":"95","severity":1,"message":"102","line":20,"column":22,"nodeType":"97","messageId":"98","endLine":20,"endColumn":36},{"ruleId":"95","severity":1,"message":"103","line":56,"column":5,"nodeType":"97","messageId":"98","endLine":56,"endColumn":14},{"ruleId":"95","severity":1,"message":"104","line":58,"column":5,"nodeType":"97","messageId":"98","endLine":58,"endColumn":20},{"ruleId":"95","severity":1,"message":"105","line":65,"column":5,"nodeType":"97","messageId":"98","endLine":65,"endColumn":11},{"ruleId":"95","severity":1,"message":"106","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":26},{"ruleId":"95","severity":1,"message":"107","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":26},{"ruleId":"95","severity":1,"message":"108","line":9,"column":40,"nodeType":"97","messageId":"98","endLine":9,"endColumn":52},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'buildChartData' is defined but never used.","'SET_CASE_TYPE' is defined but never used.","'LOAD_HISTORICAL_CANADA' is defined but never used.","'FaRegLightbulb' is defined but never used.","'countries' is assigned a value but never used.","'setCountryInput' is assigned a value but never used.","'canada' is assigned a value but never used.","'useGlobalContext' is defined but never used.","'useCanadaContext' is defined but never used.","'countryInput' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]